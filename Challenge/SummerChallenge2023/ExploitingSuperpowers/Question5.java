package Challenge.SummerChallenge2023.ExploitingSuperpowers;

import java.util.*;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;

public class Question5 {

    /**
     * @param nGears An integer representing the number of gears in the system (numbered from 0 to N-1).
     * @param connections An array representing all pairs of gears connected together.
     * @return An array of two integers representing the number of gears rotating clockwise and counterclockwise respectively, or [-1, -1] if the configuration is invalid.
     */
    public static List<Integer> gearBalance(int nGears, List<List<Integer>> connections) {
        // Write your code here
        int[] rotation = new int[nGears];
        // rotation +1: clockwise
        // rotation -1: counterclockwise
        rotation[0] = 1;

        boolean redo;
        do {
            redo = false;
            for (List<Integer> connection : connections) {
                int a = connection.get(0);
                int b = connection.get(1);
                int r = rotation[a] * rotation[b];

                if (r == 0) {
                    if (rotation[a] != 0) {
                        rotation[b] = -rotation[a];
                        redo = true;
                    }
                    else if (rotation[b] != 0) {
                        rotation[a] = -rotation[b];
                        redo = true;
                    }
                }
                else if (r == 1)
                    return Arrays.asList(-1, -1);
            }
        } while (redo);

        int c = Arrays.stream(rotation).filter(r -> r == 1).sum();

        return Arrays.asList(c, nGears - c);
    }

    /* Ignore and do not change the code below */
    private static final Gson gson = new GsonBuilder().disableHtmlEscaping().create();

    /**
     * Try a solution
     * @param output An array of two integers representing the number of gears rotating clockwise and counterclockwise respectively, or [-1, -1] if the configuration is invalid.
     */
    public static void trySolution(List<Integer> output) {
        System.out.println("" + gson.toJson(output));
    }

    public static void main(String args[]) {
        try (Scanner in = new Scanner(System.in)) {
            trySolution(gearBalance(
                    gson.fromJson(in.nextLine(), new TypeToken<Integer>(){}.getType()),
                    gson.fromJson(in.nextLine(), new TypeToken<List<List<Integer>>>(){}.getType())
            ));
        }
    }
    /* Ignore and do not change the code above */

}